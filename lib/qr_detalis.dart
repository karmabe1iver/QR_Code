import 'dart:convert';
import 'dart:typed_data';


import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:qr_code/xml_model.dart';
import 'package:qr_code_scanner/qr_code_scanner.dart';
import 'package:qr_code_scanner/src/types/barcode.dart';
import 'package:xml/xml.dart';

class QrModel extends StatelessWidget {
  const QrModel({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: Container(
            color: Colors.green,
            child: Center(
              child: Text(
                'Entry permitted',
                style: TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: 20,
                ),
              ),
            )));
  }
}

class QmodelF extends StatelessWidget {
  var result1;

  QmodelF({Key? key, this.result1}) : super(key: key);

  BigInt ef = BigInt.parse(
      "32959354749208614713165722398313032303234228140074494835776635890590417618768304970641972361429261733620329264375038074199715034703776952929503806386748507029172059517952956572763165978799485330858050548580340341032956668352173162787653028854078825779966123934627623219904544918876454049971921186846163639865406270745735773874487366014670279343050187437725092719293410656196227765599806259508685977934239108461696044657196500814564306981298986777729729525834849585061384082787172850030238650100573833509221651154168482021966787592482010194142888782803111596306094518827878857509341066581458267962846070907689389390471894847096116805418065534114811079818145882725745639000093416353741475900746521717700163097728867737030466371178660575131959371264485220628037773907763247831734339788025603844638516829628700311043090132762437430403551967086137377188971731665724598875271752012790936200194512001903239991803887524674234950168584515154012227371337558277654778117040835322777097000035035010857349684091267420103167657425071498044841724229853005478610746403982435012122807287187293259158182568209102580442763866912694369473060169583600953338154513763945538403017741897710151236965788862781795503208581614648791107865637433632363246598702520622736557218807328986081038605058500105509702867404665487832860121539708048463563567756650461945304730562229067697563586664701129921902408346014338871421942149004982385939098106966564406378540299955495902709991749732703809921605885347520255208300408362969006791093873772957917353284194110313654075473768941725041967946482905146921166054736067887402921452485190506631689902202683090581915150046132957829089310295467443438231881489052969220019942240907431154213664039139150197900872755933692504742406845903287611347120457324735163019370721228292460500744264495288456859620452640127007561076004761738338614733966790801941856705621731218754741288685784587517195539507063909461795438030926471813664599468724144018490254243729491144851408088284295758468252091233637448065633546573088060432208876235462646843113641013011077614248372449291941926288729586518890617107724044478491159018056797388011714749519869676327507362700059211943812394617618746874596611547970566655820437664662022279314815751093825272409558026568365274465250601378327901216766390035884817786626449249258078800426401665980204049703959133914990325077525355864118653962572505376499976906948692128850068738839832545972807770755887399706326660285936211139765496966439411804326124351550400065160738918975430733426227892069860805937983860347346892720834130444987441635248441353845939233941662967093124341274309176572134083302713530155765288331243355146777482777883090049858269227691715445357904738355249617024383560137430713162707381175860153633583289078776162723398995143633566773286247337812268782915577733360606346443588431858798687028725695537185754092776804910132876271718633110987390384903803482536375808229151011829836321457046656546390272075503139603781386280693486590177772503654236159475393078746388595994773831773383983490586503734273675306535608855922652542437780902928721685804854029563574828464368723966974907312313594676183118229687863897403623145278072487936");
 //var  byte= ef.toRadixString(2);
  //var gizipped = GZipCodec().decode(ef.toRadixString(2));
  List<int> bytes =utf8.encode('32959354749208614713165722398313032303234228140074494835776635890590417618768304970641972361429261733620329264375038074199715034703776952929503806386748507029172059517952956572763165978799485330858050548580340341032956668352173162787653028854078825779966123934627623219904544918876454049971921186846163639865406270745735773874487366014670279343050187437725092719293410656196227765599806259508685977934239108461696044657196500814564306981298986777729729525834849585061384082787172850030238650100573833509221651154168482021966787592482010194142888782803111596306094518827878857509341066581458267962846070907689389390471894847096116805418065534114811079818145882725745639000093416353741475900746521717700163097728867737030466371178660575131959371264485220628037773907763247831734339788025603844638516829628700311043090132762437430403551967086137377188971731665724598875271752012790936200194512001903239991803887524674234950168584515154012227371337558277654778117040835322777097000035035010857349684091267420103167657425071498044841724229853005478610746403982435012122807287187293259158182568209102580442763866912694369473060169583600953338154513763945538403017741897710151236965788862781795503208581614648791107865637433632363246598702520622736557218807328986081038605058500105509702867404665487832860121539708048463563567756650461945304730562229067697563586664701129921902408346014338871421942149004982385939098106966564406378540299955495902709991749732703809921605885347520255208300408362969006791093873772957917353284194110313654075473768941725041967946482905146921166054736067887402921452485190506631689902202683090581915150046132957829089310295467443438231881489052969220019942240907431154213664039139150197900872755933692504742406845903287611347120457324735163019370721228292460500744264495288456859620452640127007561076004761738338614733966790801941856705621731218754741288685784587517195539507063909461795438030926471813664599468724144018490254243729491144851408088284295758468252091233637448065633546573088060432208876235462646843113641013011077614248372449291941926288729586518890617107724044478491159018056797388011714749519869676327507362700059211943812394617618746874596611547970566655820437664662022279314815751093825272409558026568365274465250601378327901216766390035884817786626449249258078800426401665980204049703959133914990325077525355864118653962572505376499976906948692128850068738839832545972807770755887399706326660285936211139765496966439411804326124351550400065160738918975430733426227892069860805937983860347346892720834130444987441635248441353845939233941662967093124341274309176572134083302713530155765288331243355146777482777883090049858269227691715445357904738355249617024383560137430713162707381175860153633583289078776162723398995143633566773286247337812268782915577733360606346443588431858798687028725695537185754092776804910132876271718633110987390384903803482536375808229151011829836321457046656546390272075503139603781386280693486590177772503654236159475393078746388595994773831773383983490586503734273675306535608855922652542437780902928721685804854029563574828464368723966974907312313594676183118229687863897403623145278072487936')
   ;


  @override
  Widget build(BuildContext context) {

    return Scaffold(
      body: SafeArea(
        child: GestureDetector(
          onTap: () {
            
          },
          child: Container(
            width: double.infinity,
            height: double.infinity,
            color: Colors.red,
            child: Padding(
              padding: const EdgeInsets.all(18.0),
              child: SelectableText(
                // 'Barcode Type: ${describeEnum(result1!.format)}   Data: ${result1.code} ',
                //' base to array: ${ef.toRadixString(2)}, ',
               'Array decompress:$bytes',
                  // ${List<int> bytes = utf8.encode(ef)};'
               // print('${List<int> bytes = utf8.encode(ef)}');


                maxLines: 10,
                style: TextStyle(
                  fontSize: 15,
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }
}
